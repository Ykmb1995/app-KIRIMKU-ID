name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Lint (apps/api)
        run: |
          if [ -f apps/api/package.json ]; then npm run --prefix apps/api lint || true; fi

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Build (apps/api)
        run: |
          if [ -f apps/api/package.json ]; then npm run --prefix apps/api build || true; fi

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests (apps/api)
        run: npm run --prefix apps/api test
      - name: Upload jest results (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-results
          path: apps/api/jest-junit.xml

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image (apps/api)
        uses: docker/build-push-action@v4
        with:
          context: ./apps/api
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/app-kirimku-id:latest
            ghcr.io/${{ github.repository_owner }}/app-kirimku-id:${{ github.sha }}
